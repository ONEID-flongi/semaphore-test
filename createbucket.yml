- name: Send API Requests to ECS
  hosts: localhost
  tasks:
    - name: Set environment variables
      set_fact:
        target_url: "{{ lookup('env', 'TARGET_URL') }}"
        target_namespace: "{{ lookup('env', 'TARGET_NAMESPACE') }}"
        bucket_name: "{{ lookup('env', 'BUCKET_NAME') }}"
        auth_header: "Basic {{ lookup('env', 'API_KEY') }}"

    - name: Check if API-KEY is set
      fail:
        msg: "API-KEY environment variable is not set."
      when: auth_header == "Basic "

    - name: Disable SSL certificate validation
      set_fact:
        no_ssl_validation: |
          import ssl
          ssl._create_default_https_context = ssl._create_unverified_context

    - name: Get target auth token
      uri:
        url: "{{ target_url }}/login"
        method: GET
        headers:
          Authorization: "{{ auth_header }}"
        validate_certs: no
        timeout: 60
      register: target_response

    - name: Debug target response
      debug:
        var: target_response

    - name: Check if target auth token request was successful
      fail:
        msg: "Failed to get target auth token. Status code: {{ target_response.status }}"
      when: target_response.status != 200

    - name: Extract target auth token
      set_fact:
        target_token: "{{ target_response['x_sds_auth_token'] | default('') }}"

    - name: Check if target auth token was extracted
      fail:
        msg: "Target auth token not found in response."
      when: target_token == ''

    - name: Create bucket
      uri:
        url: "{{ target_url }}/bucket"
        method: POST
        headers:
          X-SDS-AUTH-TOKEN: "{{ target_token }}"
        body: |
          <object_bucket_create>
            <name>{{ bucket_name }}</name>
            <vpool></vpool>
            <filesystem_enabled>false</filesystem_enabled>
            <head_type>s3</head_type>
            <namespace>{{ target_namespace }}</namespace>
            <is_stale_allowed>false</is_stale_allowed>
            <retention>30</retention>
            <compliance_enabled>false</compliance_enabled>
            <search_metadata>
              <isEnabled>true</isEnabled>
              <maxKeys>0</maxKeys>
              <metadata_tokens>false</metadata_tokens>
              <metadata>
                <datatype>datetime</datatype>
                <name>LastModified</name>
                <type>System</type>
              </metadata>
            </search_metadata>
            <owner>urn:ecs:iam::{{ target_namespace }}:root</owner>
            <softquota>-1</softquota>
          </object_bucket_create>
        validate_certs: no
